[{"F:\\wamp64\\www\\amazon-clone\\src\\index.js":"1","F:\\wamp64\\www\\amazon-clone\\src\\App.js":"2","F:\\wamp64\\www\\amazon-clone\\src\\reportWebVitals.js":"3","F:\\wamp64\\www\\amazon-clone\\src\\Header.js":"4","F:\\wamp64\\www\\amazon-clone\\src\\Home.js":"5","F:\\wamp64\\www\\amazon-clone\\src\\Product.js":"6","F:\\wamp64\\www\\amazon-clone\\src\\Checkout.js":"7","F:\\wamp64\\www\\amazon-clone\\src\\Subtotal.js":"8","F:\\wamp64\\www\\amazon-clone\\src\\StateProvider.js":"9","F:\\wamp64\\www\\amazon-clone\\src\\reducer.js":"10","F:\\wamp64\\www\\amazon-clone\\src\\BasketItem.js":"11","F:\\wamp64\\www\\amazon-clone\\src\\Login.js":"12","F:\\wamp64\\www\\amazon-clone\\src\\firebase.js":"13","F:\\wamp64\\www\\amazon-clone\\src\\Payment.js":"14","F:\\wamp64\\www\\amazon-clone\\src\\Orders.js":"15","F:\\wamp64\\www\\amazon-clone\\src\\axios.js":"16","F:\\wamp64\\www\\amazon-clone\\src\\Order.js":"17"},{"size":689,"mtime":1608298805155,"results":"18","hashOfConfig":"19"},{"size":1880,"mtime":1608719974605,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607357411115,"results":"21","hashOfConfig":"19"},{"size":2364,"mtime":1608828362345,"results":"22","hashOfConfig":"19"},{"size":2116,"mtime":1608829444882,"results":"23","hashOfConfig":"19"},{"size":1547,"mtime":1608829314547,"results":"24","hashOfConfig":"19"},{"size":1660,"mtime":1608829900883,"results":"25","hashOfConfig":"19"},{"size":1256,"mtime":1608799004666,"results":"26","hashOfConfig":"19"},{"size":488,"mtime":1608298264524,"results":"27","hashOfConfig":"19"},{"size":1290,"mtime":1608713260031,"results":"28","hashOfConfig":"19"},{"size":1437,"mtime":1608807740522,"results":"29","hashOfConfig":"19"},{"size":2573,"mtime":1608720960949,"results":"30","hashOfConfig":"19"},{"size":554,"mtime":1608799317508,"results":"31","hashOfConfig":"19"},{"size":6061,"mtime":1608799431907,"results":"32","hashOfConfig":"19"},{"size":1159,"mtime":1608804833504,"results":"33","hashOfConfig":"19"},{"size":259,"mtime":1608826605162,"results":"34","hashOfConfig":"19"},{"size":1409,"mtime":1608807685465,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hjf67z",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"F:\\wamp64\\www\\amazon-clone\\src\\index.js",[],["79","80"],"F:\\wamp64\\www\\amazon-clone\\src\\App.js",["81","82"],"import React, { useEffect } from 'react';\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport Payment from './Payment';\nimport Orders from './Orders';\nimport { auth } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\n\nconst promise = loadStripe(\n  \"pk_test_51I0sMcJTvrsvfj7DCIPEEFSmavmi5bAwKJZIGOoMipeBr1kWAp0ACt6uIUHNEJryFRHBm7pU1bnXmgiZ5rE7iwVf00jk4W9GKJ\"\n);\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run once when the app component loads...\n\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"THE USER IS >>> \", authUser);\n\n      if (authUser) {\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders/>\n          </Route>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}> \n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","F:\\wamp64\\www\\amazon-clone\\src\\reportWebVitals.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Header.js",["83"],"import React from 'react'\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from './firebase';\r\n\r\nconst Header = () => {\r\n    const[{basket, user}, dispatch] = useStateValue();\r\n\r\n    const handleAuth = () => {\r\n        if(user) {\r\n            auth.signOut();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"logo_search\">\r\n                <Link to=\"/\"><img src=\"logo.png\" className=\"header_logo\" alt=\"logo\" /></Link>\r\n                <div className=\"header_search\">\r\n                    <input type=\"text\" className=\"header_searchinput\"/>\r\n                    <SearchIcon className=\"header_searchicon\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"header_right\">\r\n                <div className=\"header_nav\">\r\n                    <Link to={!user && \"/login\"}>\r\n                        <div onClick={handleAuth} className=\"header_option\">\r\n                            <span className=\"header_optionlineone\">Hello, {!user ? 'Guest' : user.email}</span>\r\n                            <span className=\"header_optionlinetwo\">{user ? 'Sign Out' : 'Sign In'}</span>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/orders\">\r\n                        <div className=\"header_option\">\r\n                            <span className=\"header_optionlineone\">Returns</span>\r\n                            <span className=\"header_optionlinetwo\">& Orders</span>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"header_option\">\r\n                        <span className=\"header_optionlineone\">Your</span>\r\n                        <span className=\"header_optionlinetwo\">Prime</span>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/checkout\">\r\n                    <div className=\"header_optionbasket\">\r\n                        <ShoppingBasketIcon />\r\n                        <span className=\"header_optionlinetwo header_basketcount\">{basket?.length}</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","F:\\wamp64\\www\\amazon-clone\\src\\Home.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Product.js",["84"],"import React from 'react';\r\nimport './Product.css';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nconst Product = ({id, title, price, image, rating}) => {\r\n    const[{ basket }, dispatch] = useStateValue();\r\n\r\n    const addToCart = () => {\r\n        // Dispatch the item into the data layer\r\n        dispatch({\r\n            type: 'ADD_TO_CART',\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product_info\">\r\n                <p className=\"product_title\">{title}</p>\r\n                <p className=\"product_price\">\r\n                    <small>₹</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product_rating\">\r\n                    {Array(rating)\r\n                        .fill()\r\n                        .map((_, i) => {\r\n                        return (\r\n                            <span key={i}><StarIcon fontSize=\"small\" className=\"rating_icon\"/></span>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <img src={image} alt=\"\"/>\r\n                <div className=\"cartbutton\">\r\n                    <button onClick={addToCart}>Add To Cart</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","F:\\wamp64\\www\\amazon-clone\\src\\Checkout.js",["85"],"import React from 'react';\r\nimport BasketItem from './BasketItem';\r\nimport './Checkout.css'\r\nimport { useStateValue } from './StateProvider';\r\nimport Subtotal from './Subtotal';\r\n\r\nconst Checkout = () => {\r\n    const[{ basket, user }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"checkout_section\">\r\n            <div className=\"checkout\">\r\n                <div className=\"checkout_left\">\r\n                    <img className=\"checkout_ad\" src=\"https://images-eu.ssl-images-amazon.com/images/G/31/img19/AmazonDevices/PSW1/Prime_Shopping_Week_1500x300_English-Blue-9-12-2020.jpg\" alt=\"\"/>\r\n                    <div className=\"checkout_title\">\r\n                        <span>Hello, {user?.email}</span>\r\n                        <h2>Your Shopping Basket</h2>\r\n                        {basket.map((item, i) => {\r\n                            return(\r\n                                <div className=\"product-list\" key={i}>\r\n                                    <BasketItem\r\n                                        id={item.id}\r\n                                        title={item.title}\r\n                                        image={item.image}\r\n                                        price={item.price}\r\n                                        rating={item.rating}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"checkout_right\">   \r\n                    <Subtotal/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout;","F:\\wamp64\\www\\amazon-clone\\src\\Subtotal.js",["86"],"import React from 'react';\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useStateValue } from './StateProvider';\r\nimport { getCartTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Subtotal = () => {\r\n    const history = useHistory();\r\n    const[{ basket }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat \r\n                renderText={(value) => (\r\n                    <>\r\n                        <p>\r\n                            Subtotal ({basket.length} items): <strong>{value}</strong>\r\n                        </p>\r\n                        <small className=\"subtotal_gift\">\r\n                            <input type=\"checkbox\"/> This order contains a gift.\r\n                        </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getCartTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={'₹'}\r\n            />\r\n            <button className=\"checout_button\" onClick={e => history.push('/payment')}>Proceed To Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","F:\\wamp64\\www\\amazon-clone\\src\\StateProvider.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\reducer.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\BasketItem.js",["87"],"import React from 'react';\r\nimport './BasketItem.css';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { useStateValue } from './StateProvider';\r\n// import FlipMove from 'react-flip-move';\r\n\r\n\r\nconst BasketItem = ({id, image, title, price, rating, hideButton}) => {\r\n    const[{ basket }, dispatch] = useStateValue();\r\n\r\n    const removeFromBasket = () => {\r\n        // remove the item from basket\r\n        dispatch({\r\n            type: 'REMOVE_FROM_CART',\r\n            id: id,\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"basktitem\" key=\"a\">\r\n            <img className=\"basketitem_image\" src={image} alt=\"\"/>\r\n            <div className=\"basketitem_info\">\r\n                <p className=\"basketitem_title\">{title}</p>\r\n                <p className=\"basketitem_price\">\r\n                    <small>₹</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"basketitem_rating\">\r\n                    {Array(rating).fill().map((_, i) => {\r\n                        return (\r\n                            <span key={i}><StarIcon fontSize=\"small\" className=\"rating_icon\"/></span>\r\n                        )\r\n                    })}\r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromBasket}>Remove from Cart</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BasketItem\r\n","F:\\wamp64\\www\\amazon-clone\\src\\Login.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\firebase.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Payment.js",["88"],"import React, { useEffect, useState } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport BasketItem from './BasketItem';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getCartTotal } from './reducer';\r\nimport axios from './axios';\r\nimport { db } from './firebase';\r\n\r\nconst Payment = () => {\r\n    const[{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const[succeeded, updateSucceeded] = useState(false);\r\n    const[processing, updateProcessing] = useState(\"\")\r\n    const[error, updateError] = useState(null);\r\n    const[disabled, updateDisabled] = useState(true);\r\n    const[clientSecret, updateClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getCartTotal(basket) * 100}` \r\n            });\r\n            updateClientSecret(response.data.clientSecret)\r\n        }\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n    console.log('THE SECRET IS >>>', clientSecret)\r\n    // console.log('👱', user)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        updateProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card : elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            db\r\n                .collection('users')\r\n                .doc(user?.uid) \r\n                .collection('orders')\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    basket: basket,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created\r\n                })\r\n\r\n            // paymentIntent = payment confirmation\r\n            updateSucceeded(true);\r\n            updateError(null);\r\n            updateProcessing(false);\r\n\r\n            dispatch({\r\n                type: 'EMPYT_CART'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        // Listen for changes in CardElements\r\n        // and display any error as the customer types their card details\r\n        updateDisabled(e.empty)\r\n        updateError(e.error ? e.error.message : '')\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <h1>\r\n                Checkout (\r\n                    <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                )\r\n            </h1>\r\n            <div className=\"payment_container\">\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment_address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>123 Civil Lines</p>\r\n                        <p>Ludhiana, Punjab</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Review Items & Delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment_items\">\r\n                        {basket.map((item, index) => (\r\n                            <div key={index}>\r\n                                <BasketItem \r\n                                    id={item.id}\r\n                                    title={item.title}\r\n                                    image={item.image}\r\n                                    price={item.price}\r\n                                    rating={item.rating}\r\n                                />\r\n                            </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delivery Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n                            <div className=\"payment_priceContiner\">\r\n                                <CurrencyFormat \r\n                                    renderText={(value) => (\r\n                                        <div className=\"subtotal_price mt_1\">\r\n                                            <p>\r\n                                                Order Total ({basket.length} items): <strong>{value}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getCartTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={'₹'}\r\n                                />\r\n                                <button className=\"payment_buynow\" disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","F:\\wamp64\\www\\amazon-clone\\src\\Orders.js",["89","90"],"import React, { useEffect, useState } from 'react';\r\nimport { db } from './firebase';\r\nimport Order from './Order';\r\nimport './Orders.css'\r\nimport { useStateValue } from './StateProvider';\r\n\r\nconst Orders = () => {\r\n    const[{ basket, user }, dispatch] = useStateValue();\r\n    const[orders, updateOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            db\r\n            .collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .orderBy('created', 'desc')\r\n            .onSnapshot(snapshot => (\r\n                updateOrders(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            ))\r\n        } else {\r\n            updateOrders([]);\r\n        }\r\n    }, [user])\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your Orders</h1>\r\n            <div className=\"orders_order\">\r\n                {\r\n                    orders?.map(order => (\r\n                        <Order order={order} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","F:\\wamp64\\www\\amazon-clone\\src\\axios.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Order.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":20,"column":10,"nodeType":"97","messageId":"98","endLine":20,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":43,"column":6,"nodeType":"101","endLine":43,"endColumn":8,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":10,"column":27,"nodeType":"105","messageId":"106","endLine":10,"endColumn":35},{"ruleId":"103","severity":1,"message":"107","line":7,"column":13,"nodeType":"105","messageId":"106","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":8,"column":29,"nodeType":"105","messageId":"106","endLine":8,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":10,"column":23,"nodeType":"105","messageId":"106","endLine":10,"endColumn":31},{"ruleId":"103","severity":1,"message":"107","line":9,"column":13,"nodeType":"105","messageId":"106","endLine":9,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":45,"column":15,"nodeType":"105","messageId":"106","endLine":45,"endColumn":22},{"ruleId":"103","severity":1,"message":"107","line":8,"column":13,"nodeType":"105","messageId":"106","endLine":8,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":8,"column":29,"nodeType":"105","messageId":"106","endLine":8,"endColumn":37},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [dispatch]",{"range":"114","text":"115"},[1204,1206],"[dispatch]"]