[{"F:\\wamp64\\www\\amazon-clone\\src\\index.js":"1","F:\\wamp64\\www\\amazon-clone\\src\\App.js":"2","F:\\wamp64\\www\\amazon-clone\\src\\reportWebVitals.js":"3","F:\\wamp64\\www\\amazon-clone\\src\\Header.js":"4","F:\\wamp64\\www\\amazon-clone\\src\\Home.js":"5","F:\\wamp64\\www\\amazon-clone\\src\\Product.js":"6","F:\\wamp64\\www\\amazon-clone\\src\\Checkout.js":"7","F:\\wamp64\\www\\amazon-clone\\src\\Subtotal.js":"8","F:\\wamp64\\www\\amazon-clone\\src\\StateProvider.js":"9","F:\\wamp64\\www\\amazon-clone\\src\\reducer.js":"10","F:\\wamp64\\www\\amazon-clone\\src\\BasketItem.js":"11","F:\\wamp64\\www\\amazon-clone\\src\\Login.js":"12","F:\\wamp64\\www\\amazon-clone\\src\\firebase.js":"13","F:\\wamp64\\www\\amazon-clone\\src\\Payment.js":"14","F:\\wamp64\\www\\amazon-clone\\src\\Orders.js":"15","F:\\wamp64\\www\\amazon-clone\\src\\axios.js":"16","F:\\wamp64\\www\\amazon-clone\\src\\Order.js":"17"},{"size":689,"mtime":1608298805155,"results":"18","hashOfConfig":"19"},{"size":1880,"mtime":1611650017158,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607357411115,"results":"21","hashOfConfig":"19"},{"size":2364,"mtime":1608828362345,"results":"22","hashOfConfig":"19"},{"size":2116,"mtime":1611652430077,"results":"23","hashOfConfig":"19"},{"size":1548,"mtime":1611651512920,"results":"24","hashOfConfig":"19"},{"size":1660,"mtime":1608829900883,"results":"25","hashOfConfig":"19"},{"size":1256,"mtime":1608799004666,"results":"26","hashOfConfig":"19"},{"size":488,"mtime":1608298264524,"results":"27","hashOfConfig":"19"},{"size":1290,"mtime":1608713260031,"results":"28","hashOfConfig":"19"},{"size":1437,"mtime":1611651869365,"results":"29","hashOfConfig":"19"},{"size":2573,"mtime":1608720960949,"results":"30","hashOfConfig":"19"},{"size":554,"mtime":1608799317508,"results":"31","hashOfConfig":"19"},{"size":6061,"mtime":1608799431907,"results":"32","hashOfConfig":"19"},{"size":1159,"mtime":1608804833504,"results":"33","hashOfConfig":"19"},{"size":259,"mtime":1608826605162,"results":"34","hashOfConfig":"19"},{"size":1409,"mtime":1608807685465,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hjf67z",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"F:\\wamp64\\www\\amazon-clone\\src\\index.js",[],["76","77"],"F:\\wamp64\\www\\amazon-clone\\src\\App.js",["78","79"],"F:\\wamp64\\www\\amazon-clone\\src\\reportWebVitals.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Header.js",["80"],"import React from 'react'\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from './firebase';\r\n\r\nconst Header = () => {\r\n    const[{basket, user}, dispatch] = useStateValue();\r\n\r\n    const handleAuth = () => {\r\n        if(user) {\r\n            auth.signOut();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"logo_search\">\r\n                <Link to=\"/\"><img src=\"logo.png\" className=\"header_logo\" alt=\"logo\" /></Link>\r\n                <div className=\"header_search\">\r\n                    <input type=\"text\" className=\"header_searchinput\"/>\r\n                    <SearchIcon className=\"header_searchicon\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"header_right\">\r\n                <div className=\"header_nav\">\r\n                    <Link to={!user && \"/login\"}>\r\n                        <div onClick={handleAuth} className=\"header_option\">\r\n                            <span className=\"header_optionlineone\">Hello, {!user ? 'Guest' : user.email}</span>\r\n                            <span className=\"header_optionlinetwo\">{user ? 'Sign Out' : 'Sign In'}</span>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/orders\">\r\n                        <div className=\"header_option\">\r\n                            <span className=\"header_optionlineone\">Returns</span>\r\n                            <span className=\"header_optionlinetwo\">& Orders</span>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"header_option\">\r\n                        <span className=\"header_optionlineone\">Your</span>\r\n                        <span className=\"header_optionlinetwo\">Prime</span>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/checkout\">\r\n                    <div className=\"header_optionbasket\">\r\n                        <ShoppingBasketIcon />\r\n                        <span className=\"header_optionlinetwo header_basketcount\">{basket?.length}</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","F:\\wamp64\\www\\amazon-clone\\src\\Home.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Product.js",["81"],"F:\\wamp64\\www\\amazon-clone\\src\\Checkout.js",["82"],"import React from 'react';\r\nimport BasketItem from './BasketItem';\r\nimport './Checkout.css'\r\nimport { useStateValue } from './StateProvider';\r\nimport Subtotal from './Subtotal';\r\n\r\nconst Checkout = () => {\r\n    const[{ basket, user }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"checkout_section\">\r\n            <div className=\"checkout\">\r\n                <div className=\"checkout_left\">\r\n                    <img className=\"checkout_ad\" src=\"https://images-eu.ssl-images-amazon.com/images/G/31/img19/AmazonDevices/PSW1/Prime_Shopping_Week_1500x300_English-Blue-9-12-2020.jpg\" alt=\"\"/>\r\n                    <div className=\"checkout_title\">\r\n                        <span>Hello, {user?.email}</span>\r\n                        <h2>Your Shopping Basket</h2>\r\n                        {basket.map((item, i) => {\r\n                            return(\r\n                                <div className=\"product-list\" key={i}>\r\n                                    <BasketItem\r\n                                        id={item.id}\r\n                                        title={item.title}\r\n                                        image={item.image}\r\n                                        price={item.price}\r\n                                        rating={item.rating}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"checkout_right\">   \r\n                    <Subtotal/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout;","F:\\wamp64\\www\\amazon-clone\\src\\Subtotal.js",["83"],"import React from 'react';\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useStateValue } from './StateProvider';\r\nimport { getCartTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Subtotal = () => {\r\n    const history = useHistory();\r\n    const[{ basket }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat \r\n                renderText={(value) => (\r\n                    <>\r\n                        <p>\r\n                            Subtotal ({basket.length} items): <strong>{value}</strong>\r\n                        </p>\r\n                        <small className=\"subtotal_gift\">\r\n                            <input type=\"checkbox\"/> This order contains a gift.\r\n                        </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getCartTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={'₹'}\r\n            />\r\n            <button className=\"checout_button\" onClick={e => history.push('/payment')}>Proceed To Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","F:\\wamp64\\www\\amazon-clone\\src\\StateProvider.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\reducer.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\BasketItem.js",["84"],"F:\\wamp64\\www\\amazon-clone\\src\\Login.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\firebase.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Payment.js",["85"],"import React, { useEffect, useState } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport BasketItem from './BasketItem';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getCartTotal } from './reducer';\r\nimport axios from './axios';\r\nimport { db } from './firebase';\r\n\r\nconst Payment = () => {\r\n    const[{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const[succeeded, updateSucceeded] = useState(false);\r\n    const[processing, updateProcessing] = useState(\"\")\r\n    const[error, updateError] = useState(null);\r\n    const[disabled, updateDisabled] = useState(true);\r\n    const[clientSecret, updateClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getCartTotal(basket) * 100}` \r\n            });\r\n            updateClientSecret(response.data.clientSecret)\r\n        }\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n    console.log('THE SECRET IS >>>', clientSecret)\r\n    // console.log('👱', user)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        updateProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card : elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            db\r\n                .collection('users')\r\n                .doc(user?.uid) \r\n                .collection('orders')\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    basket: basket,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created\r\n                })\r\n\r\n            // paymentIntent = payment confirmation\r\n            updateSucceeded(true);\r\n            updateError(null);\r\n            updateProcessing(false);\r\n\r\n            dispatch({\r\n                type: 'EMPYT_CART'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        // Listen for changes in CardElements\r\n        // and display any error as the customer types their card details\r\n        updateDisabled(e.empty)\r\n        updateError(e.error ? e.error.message : '')\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <h1>\r\n                Checkout (\r\n                    <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                )\r\n            </h1>\r\n            <div className=\"payment_container\">\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment_address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>123 Civil Lines</p>\r\n                        <p>Ludhiana, Punjab</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Review Items & Delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment_items\">\r\n                        {basket.map((item, index) => (\r\n                            <div key={index}>\r\n                                <BasketItem \r\n                                    id={item.id}\r\n                                    title={item.title}\r\n                                    image={item.image}\r\n                                    price={item.price}\r\n                                    rating={item.rating}\r\n                                />\r\n                            </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delivery Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n                            <div className=\"payment_priceContiner\">\r\n                                <CurrencyFormat \r\n                                    renderText={(value) => (\r\n                                        <div className=\"subtotal_price mt_1\">\r\n                                            <p>\r\n                                                Order Total ({basket.length} items): <strong>{value}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getCartTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={'₹'}\r\n                                />\r\n                                <button className=\"payment_buynow\" disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","F:\\wamp64\\www\\amazon-clone\\src\\Orders.js",["86","87"],"import React, { useEffect, useState } from 'react';\r\nimport { db } from './firebase';\r\nimport Order from './Order';\r\nimport './Orders.css'\r\nimport { useStateValue } from './StateProvider';\r\n\r\nconst Orders = () => {\r\n    const[{ basket, user }, dispatch] = useStateValue();\r\n    const[orders, updateOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            db\r\n            .collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .orderBy('created', 'desc')\r\n            .onSnapshot(snapshot => (\r\n                updateOrders(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            ))\r\n        } else {\r\n            updateOrders([]);\r\n        }\r\n    }, [user])\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your Orders</h1>\r\n            <div className=\"orders_order\">\r\n                {\r\n                    orders?.map(order => (\r\n                        <Order order={order} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","F:\\wamp64\\www\\amazon-clone\\src\\axios.js",[],"F:\\wamp64\\www\\amazon-clone\\src\\Order.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":20,"column":10,"nodeType":"94","messageId":"95","endLine":20,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":43,"column":6,"nodeType":"98","endLine":43,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":10,"column":27,"nodeType":"102","messageId":"103","endLine":10,"endColumn":35},{"ruleId":"100","severity":1,"message":"104","line":7,"column":13,"nodeType":"102","messageId":"103","endLine":7,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":8,"column":29,"nodeType":"102","messageId":"103","endLine":8,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":10,"column":23,"nodeType":"102","messageId":"103","endLine":10,"endColumn":31},{"ruleId":"100","severity":1,"message":"104","line":9,"column":13,"nodeType":"102","messageId":"103","endLine":9,"endColumn":19},{"ruleId":"100","severity":1,"message":"105","line":45,"column":15,"nodeType":"102","messageId":"103","endLine":45,"endColumn":22},{"ruleId":"100","severity":1,"message":"104","line":8,"column":13,"nodeType":"102","messageId":"103","endLine":8,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":8,"column":29,"nodeType":"102","messageId":"103","endLine":8,"endColumn":37},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [dispatch]",{"range":"111","text":"112"},[1204,1206],"[dispatch]"]